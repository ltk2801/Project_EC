--FUNCTION

CREATE
-- ALTER
FUNCTION REGIS_IDPARTNER()
RETURNS CHAR(5)
AS
BEGIN
	DECLARE @ID CHAR(5)
	IF(NOT EXISTS (SELECT *
				   FROM PARTNERS))
	BEGIN
		SET @ID = 'DT001'
		RETURN @ID
	END
	ELSE
	BEGIN
		SELECT @ID = CAST(CAST(MIN(RIGHT(ID_lOGIN,3)) + 1 AS INT) AS CHAR(5))
		FROM ACCOUNT
		WHERE CHARINDEX('DT',ID_LOGIN) !=0
		AND (RIGHT(ID_lOGIN,3) + 1) NOT IN (SELECT RIGHT(ACC.ID_lOGIN,3) FROM ACCOUNT ACC WHERE CHARINDEX('DT',ACC.ID_LOGIN) !=0)
	END
	
	DECLARE @TEMP INT = CAST(@ID AS INT)
	DECLARE @COUNT INT = 0

	WHILE(@TEMP >0)
	BEGIN
		SET @TEMP = @TEMP/10
		SET @COUNT = @COUNT + 1
	end
    
	DECLARE @CNT int =0
	WHILE(@CNT <> (3-@COUNT))
	BEGIN
		SET @ID = '0' + @ID
		SET @CNT = @CNT + 1
	END
	SET @ID = 'DT' + @ID
	RETURN @ID
END

CREATE
--ALTER
FUNCTION CREATE_TYPEP(
	@NAME NVARCHAR(80)
)
RETURNS CHAR(10)
AS
BEGIN
	DECLARE @NAMETYPE NVARCHAR(10) = ''

	IF(CHARINDEX(' ',@NAME) != 0)
	BEGIN
		WHILE(LEN(@NAMETYPE) <3)
		BEGIN
			SELECT @NAMETYPE = @NAMETYPE + UPPER(SUBSTRING(value, 1, 1))
			FROM STRING_SPLIT(@NAME, ' ')
		END
	END
	ELSE
	BEGIN
		SET @NAMETYPE = UPPER(LEFT(@NAME,2))
	END
	SET @NAMETYPE = LEFT(@NAMETYPE,3)
	DECLARE @COUNT INT = 0
	DECLARE @LENGTH INT
	SELECT @LENGTH = MAX(LEN(VALUE))
	FROM STRING_SPLIT(@NAME, ' ');
	WHILE(EXISTS(SELECT * FROM TYPE_POINTS WHERE NAME = @NAMETYPE) AND @COUNT <= @LENGTH)
	BEGIN
		SET @NAMETYPE = @NAMETYPE + UPPER(SUBSTRING(@NAME, @COUNT+1, 1))
		SET @COUNT = @COUNT + 1
	END

	SET @NAMETYPE = CAST(@NAMETYPE AS CHAR(10))

	RETURN @NAMETYPE
END

--PROCEDURE
CREATE
-- ALTER
PROC REGIS_PARTNER(
	@NAME NVARCHAR(80),
	@PASS CHAR(20),
	@ADDRESS NVARCHAR(100),
	@EMAIL CHAR(20),
	@PHONE CHAR(10)
)
AS
BEGIN TRANSACTION
	BEGIN TRY
		IF(EXISTS (SELECT *
				   FROM ACCOUNT
				   WHERE USERNAME = @PHONE))
		BEGIN
			ROLLBACK TRANSACTION
			RETURN 1
		END

		IF(EXISTS (SELECT *
				   FROM TYPE_POINTS
				   WHERE NAME = DBO.CREATE_TYPEP(@NAME)))
		BEGIN
			ROLLBACK TRANSACTION
			RETURN 1
		END

		IF(CHARINDEX('@',@EMAIL) = 0)
		BEGIN
			ROLLBACK TRANSACTION
			RETURN 1
		END
	END TRY

	BEGIN CATCH
		PRINT(N'THÔNG TIN KHÔNG HỢP LỆ !')
	END CATCH

	DECLARE @IDPAR CHAR(5) = DBO.REGIS_IDPARTNER()
	DECLARE @IDTYPEP INT = 0
	IF(NOT EXISTS (SELECT *
				   FROM TYPE_POINTS))
	BEGIN
		SET @IDTYPEP = 1
	END
	ELSE
	BEGIN
		SELECT @IDTYPEP = MAX(ID_TYPEP) + 1
		FROM TYPE_POINTS
	END

	
	INSERT INTO ACCOUNT VALUES (@IDPAR,@PHONE,@PASS,GETDATE(),N'ĐỐI TÁC')
	INSERT INTO PARTNERS VALUES (@IDPAR,@NAME,@EMAIL,@ADDRESS,@PHONE)
	INSERT INTO TYPE_POINTS VALUES(@IDTYPEP,DBO.CREATE_TYPEP(@NAME),@IDPAR)

COMMIT TRANSACTION


--CREATE
---- ALTER
--PROC CHOOSE_PROD(
--	@ID INT
--)
--AS
--BEGIN TRANSACTION
--	BEGIN TRY
--		IF(EXISTS (SELECT *
--				   FROM PRODUCTS
--				   WHERE ID_PRODUCTS = @ID))
--		BEGIN
--			ROLLBACK TRANSACTION
--			RETURN 1
--		END
--	END TRY

--	BEGIN CATCH
--		PRINT(N'THÔNG TIN KHÔNG HỢP LỆ !')
--	END CATCH

--	DECLARE @IDCUS CHAR(5) = DBO.REGIS_IDPARTNER()
--	INSERT INTO ACCOUNT VALUES (@IDCUS,@PHONE,@PASS,GETDATE(),N'ĐỐI TÁC')
--	INSERT INTO PARTNERS VALUES (@IDCUS,@NAME,@ADDRESS,@EMAIL,@PHONE)

--COMMIT TRANSACTION
