USE OMRP

CREATE
--ALTER
PROC POINTSTOPROD(
	@ID_PRODUCTS INt,
	@ID_PARTNER CHAR(5)
)
AS
BEGIN TRANSACTION
	DECLARE @TYPEP INT
	SELECT @TYPEP = ID_TYPEP FROM TYPE_POINTS WHERE ID_PARTNERS = @ID_PARTNER

	BEGIN TRY
		IF(EXISTS(SELECT *
				  FROM EXCHANGE_POINT
				  WHERE ID_PRODUCTS = @ID_PRODUCTS
				  AND ID_TYPEP = @TYPEP))
		BEGIN
			ROLLBACK TRANSACTION
			RETURN 1
		END
	END TRY

	BEGIN CATCH
		PRINT(N'THÔNG TIN NHẬP VÀO ĐÃ TỒN TẠI')
	END CATCH
	
	DECLARE @PRICE_PROD INT
	SELECT @PRICE_PROD = PRICE FROM PRODUCTS WHERE ID_PRODUCTS = @ID_PRODUCTS
	
	DECLARE @AMOUNT_CONT INT
	SELECT @AMOUNT_CONT = CAST(ROUND(AMOUNTTOPOINTS,0) AS INT) FROM CONTRACT WHERE CONTRACT_PARTNER = @ID_PARTNER
	
	DECLARE @PRICE INT = @PRICE_PROD/ @AMOUNT_CONT

	INSERT INTO EXCHANGE_POINT VALUES (@ID_PRODUCTS,@PRICE,@TYPEP)

COMMIT TRANSACTION

CREATE
--ALTER
PROC CONTRACTVIEW(
	@IDPARTNER CHAR(5)
)
AS
BEGIN TRANSACTION
	BEGIN TRY
		IF(NOT EXISTS(SELECT *
				  FROM CONTRACT
				  WHERE CONTRACT_PARTNER = @IDPARTNER))
		BEGIN
			ROLLBACK TRANSACTION
			RETURN 1
		END
	END TRY

	BEGIN CATCH
		PRINT(N'THÔNG TIN NHẬP VÀO KHÔNG TỒN TẠI')
	END CATCH

	SELECT * FROM CONTRACT WHERE CONTRACT_PARTNER = @IDPARTNER

COMMIT TRANSACTION

CREATE
--ALTER
PROC REGIS_CONT(
	@TAX CHAR(5),
	@DEPUTY NVARCHAR(100),
	@EFFECTIVE_TIME DATETIME,
	@AMOUNTTOPOINTS FLOAT,
	@COMMISSION INT,
	@ID_PARTNER CHAR(5)
)
AS
BEGIN TRANSACTION
	BEGIN TRY
		IF(DATEDIFF(DAY,GETDATE(),@EFFECTIVE_TIME) < 0)
		BEGIN
			ROLLBACK TRANSACTION
			RETURN 1
		END

		IF(@AMOUNTTOPOINTS < 10000)
		BEGIN
			ROLLBACK TRANSACTION
			RETURN 1
		END

		IF(@COMMISSION < 5)
		BEGIN
			ROLLBACK TRANSACTION
			RETURN 1
		END

		IF(NOT EXISTS(SELECT *
					  FROM PARTNERS
					  WHERE ID_PARTNERS = @ID_PARTNER))
		BEGIN
			ROLLBACK TRANSACTION
			RETURN 1
		END

	END TRY

	BEGIN CATCH
		PRINT(N'THÔNG TIN NHẬP VÀO KHÔNG TỒN TẠI')
	END CATCH

	DECLARE @ID CHAR(5)
	IF(NOT EXISTS (SELECT *
				   FROM CONTRACT))
		BEGIN
			SET @ID = 'CT001'
		END
	ELSE
		BEGIN
			SELECT @ID = CAST(CAST(MIN(RIGHT(ID_CONTRACT,3)) + 1 AS INT) AS CHAR(5))
			FROM CONTRACT
			WHERE (RIGHT(ID_CONTRACT,3) + 1) NOT IN (SELECT RIGHT(ID_CONTRACT,3) FROM CONTRACT)
		
			DECLARE @TEMP INT = CAST(@ID AS INT)
			DECLARE @COUNT INT = 0

			WHILE(@TEMP >0)
				BEGIN
					SET @TEMP = @TEMP/10
					SET @COUNT = @COUNT + 1
				END
	 
			DECLARE @CNT int =0
			WHILE(@CNT <> (3-@COUNT))
			BEGIN
				SET @ID = '0' + @ID
				SET @CNT = @CNT + 1
			END
			SET @ID = 'CT' + @ID
		END

	INSERT INTO CONTRACT VALUES (@ID,@TAX,@DEPUTY,GETDATE(),@EFFECTIVE_TIME,@AMOUNTTOPOINTS,@COMMISSION,NULL,@ID_PARTNER,N'CHỜ DUYỆT')

COMMIT TRANSACTION

CREATE
--ALTER
PROC REVOKE_PROD(
	@IDPARTNER CHAR(5),
	@IDPROD INT
)
AS
BEGIN TRANSACTION

	DECLARE @TYPEP INT
	SELECT @TYPEP = ID_TYPEP FROM TYPE_POINTS WHERE ID_PARTNERS = @IDPARTNER

	BEGIN TRY
		IF(NOT EXISTS(SELECT *
					  FROM PRODUCTS
					  WHERE ID_PRODUCTS = @IDPROD))
		BEGIN
			ROLLBACK TRANSACTION
			RETURN 1
		END

		IF(NOT EXISTS(SELECT *
					  FROM EXCHANGE_POINT EXC
					  WHERE EXC.ID_PRODUCTS = @IDPROD
					  AND EXC.ID_TYPEP = @TYPEP))
		BEGIN
			ROLLBACK TRANSACTION
			RETURN 1
		END
	END TRY

	BEGIN CATCH
		PRINT(N'THÔNG TIN NHẬP VÀO KHÔNG TỒN TẠI')
	END CATCH

	DELETE EXCHANGE_POINT
	WHERE ID_PRODUCTS = @IDPROD
	AND ID_TYPEP = @TYPEP
COMMIT TRANSACTION
